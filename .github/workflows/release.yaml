name: release
on:
  push:
    tags:
      - v*
permissions:
  contents: write
jobs:
  release-github:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          cache-dependency-path: './backend/go.sum'
          go-version: 'stable'
      - uses: actions/setup-node@v4
        with:
          node-version: 'latest'
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sudo apt update
          sudo apt install -y fakeroot
          cd frontend
          npm install
          npm run publish
  release-aur:
    runs-on: ubuntu-latest
    container:
      image: archlinux
    env:
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          cache-dependency-path: './backend/go.sum'
          go-version: 'stable'
      - name: Update AUR
        run: |
          pacman -Syu --noconfirm pacman-contrib openssh git
          useradd runner
          mkdir /home/runner
          chown runner:runner /home/runner

          #Get new version from REF, stripping v
          VERSION=${GITHUB_REF#refs/tags/v}

          #Setup SSH Agent
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          touch ~/.ssh/github_actions
          chmod 600 ~/.ssh/github_actions
          echo "${{ secrets.AUR_SSH_PRIVATE_KEY }}" > ~/.ssh/github_actions
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add ~/.ssh/github_actions

          #Add aur to known hosts
          mkdir -p ~/.ssh
          ssh-keyscan aur.archlinux.org >> ~/.ssh/known_hosts

          #Configure git
          git config --global user.name "GitHub Actions"
          git config --global user.email "greboid@github"
          git config --global advice.detachedHead false
          git config --global init.defaultBranch master

          #Clone the AUR package
          git clone ssh://aur@aur.archlinux.org/tithon.git /home/runner/tithon
          cd /home/runner/tithon

          #Update the PKGBUILD with the version
          sed -i "s/^pkgver=.*/pkgver=${VERSION}/" PKGBUILD
          sed -i "s/^pkgrel=.*/pkgrel=1/" PKGBUILD

          #Update sums
          chown -R runner:runner /home/runner/tithon
          su - runner sh -c "updpkgsums /home/runner/tithon/PKGBUILD"
          su - runner sh -c "makepkg --printsrcinfo > .SRCINFO"
          chown -R root:root /home/runner/tithon

          #Stage file in git
          git add PKGBUILD .SRCINFO

          #Check if no changed and exit
          if git diff --staged --quiet; then
            echo "No changes to commit. PKGBUILD is already up to date."
            exit 0
          fi

          #Push changes
          git commit -m "Update to version $VERSION"
          git push
